// <auto-generated />
using System;
using Divstack.Company.Estimation.Tool.Estimations.Persistance.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Divstack.Company.Estimation.Tool.Estimations.Persistance.Migrations
{
    [DbContext(typeof(ValuationsContext))]
    partial class ValuationsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Divstack.Company.Estimation.Tool.Estimations.Domain.Valuations.Valuation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Valuations", "Valuations");
                });

            modelBuilder.Entity("Divstack.Company.Estimation.Tool.Estimations.Domain.Valuations.Valuation", b =>
                {
                    b.OwnsOne("Divstack.Company.Estimation.Tool.Estimations.Domain.Valuations.Enquiry", "Enquiry", b1 =>
                        {
                            b1.Property<Guid>("ValuationId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ValuationId");

                            b1.ToTable("Valuations");

                            b1.WithOwner()
                                .HasForeignKey("ValuationId");

                            b1.OwnsOne("Divstack.Company.Estimation.Tool.Estimations.Domain.Valuations.Client", "Client", b2 =>
                                {
                                    b2.Property<Guid>("EnquiryValuationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("EnquiryValuationId");

                                    b2.ToTable("Valuations");

                                    b2.WithOwner()
                                        .HasForeignKey("EnquiryValuationId");

                                    b2.OwnsOne("Divstack.Company.Estimation.Tool.Shared.DDD.ValueObjects.Emails.Email", "Email", b3 =>
                                        {
                                            b3.Property<Guid>("ClientEnquiryValuationId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(255)
                                                .HasColumnType("nvarchar(255)");

                                            b3.HasKey("ClientEnquiryValuationId");

                                            b3.ToTable("Valuations");

                                            b3.WithOwner()
                                                .HasForeignKey("ClientEnquiryValuationId");
                                        });

                                    b2.Navigation("Email");
                                });

                            b1.Navigation("Client");
                        });

                    b.OwnsMany("Divstack.Company.Estimation.Tool.Estimations.Domain.Valuations.Proposals.Proposal", "Proposals", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("Cancelled")
                                .HasColumnType("datetime2");

                            b1.Property<Guid?>("CancelledBy")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Suggested")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("SuggestedBy")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ValuationId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("ValuationId");

                            b1.ToTable("Valuations", "Proposals");

                            b1.WithOwner("Valuation")
                                .HasForeignKey("ValuationId");

                            b1.OwnsOne("Divstack.Company.Estimation.Tool.Estimations.Domain.Valuations.Proposals.ProposalDecision", "Decision", b2 =>
                                {
                                    b2.Property<Guid>("ProposalId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<DateTime?>("Date")
                                        .IsRequired()
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("RejectReason")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProposalId");

                                    b2.ToTable("Valuations");

                                    b2.WithOwner()
                                        .HasForeignKey("ProposalId");
                                });

                            b1.OwnsOne("Divstack.Company.Estimation.Tool.Estimations.Domain.Valuations.Proposals.ProposalDescription", "Description", b2 =>
                                {
                                    b2.Property<Guid>("ProposalId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Message")
                                        .HasMaxLength(512)
                                        .HasColumnType("nvarchar(512)");

                                    b2.HasKey("ProposalId");

                                    b2.ToTable("Valuations");

                                    b2.WithOwner()
                                        .HasForeignKey("ProposalId");
                                });

                            b1.OwnsOne("Divstack.Company.Estimation.Tool.Shared.DDD.ValueObjects.Money", "Price", b2 =>
                                {
                                    b2.Property<Guid>("ProposalId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Currency")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<decimal?>("Value")
                                        .HasColumnType("decimal(18,2)");

                                    b2.HasKey("ProposalId");

                                    b2.ToTable("Valuations");

                                    b2.WithOwner()
                                        .HasForeignKey("ProposalId");
                                });

                            b1.Navigation("Decision");

                            b1.Navigation("Description");

                            b1.Navigation("Price");

                            b1.Navigation("Valuation");
                        });

                    b.Navigation("Enquiry");

                    b.Navigation("Proposals");
                });
#pragma warning restore 612, 618
        }
    }
}
