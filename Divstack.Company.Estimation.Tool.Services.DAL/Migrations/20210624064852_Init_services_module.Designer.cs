// <auto-generated />
using System;
using Divstack.Company.Estimation.Tool.Services.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Divstack.Company.Estimation.Tool.Services.DAL.Migrations
{
    [DbContext(typeof(ServicesContext))]
    [Migration("20210624064852_Init_services_module")]
    partial class Init_services_module
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Divstack.Company.Estimation.Tool.Services.Core.Services.Categories.Category", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Divstack.Company.Estimation.Tool.Services.Core.Services.Service", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("CategoryId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Divstack.Company.Estimation.Tool.Services.Core.Services.Service", b =>
                {
                    b.HasOne("Divstack.Company.Estimation.Tool.Services.Core.Services.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.OwnsMany("Divstack.Company.Estimation.Tool.Services.Core.Services.Attributes.Attribute", "Attributes", b1 =>
                        {
                            b1.Property<byte[]>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("varbinary(16)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("varchar(255)");

                            b1.Property<byte[]>("ServiceId")
                                .IsRequired()
                                .HasColumnType("varbinary(16)");

                            b1.HasKey("Id");

                            b1.HasIndex("ServiceId");

                            b1.ToTable("AttributePossibleValues");

                            b1.WithOwner("Service")
                                .HasForeignKey("ServiceId");

                            b1.OwnsMany("Divstack.Company.Estimation.Tool.Services.Core.Services.Attributes.PossibleValues.PossibleValue", "PossibleValues", b2 =>
                                {
                                    b2.Property<byte[]>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("varbinary(16)");

                                    b2.Property<byte[]>("AttributeId")
                                        .IsRequired()
                                        .HasColumnType("varbinary(16)");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("varchar(255)");

                                    b2.HasKey("Id");

                                    b2.HasIndex("AttributeId");

                                    b2.ToTable("PossibleValue");

                                    b2.WithOwner("Attribute")
                                        .HasForeignKey("AttributeId");

                                    b2.Navigation("Attribute");
                                });

                            b1.Navigation("PossibleValues");

                            b1.Navigation("Service");
                        });

                    b.Navigation("Attributes");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
