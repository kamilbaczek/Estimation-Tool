name: Build
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.x' # SDK Version to use.
    - name: Install dotnet-reportgenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool --tool-path tools
    - name: Install sonarscanner-dotnet
      run: dotnet new tool-manifest && dotnet tool install --global dotnet-sonarscanner --version 5.4
    - name: Sonarscanner for dotnet
      run: |
           dotnet test --collect:"XPlat Code Coverage"
           dotnet reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:sonarqubecoverage" "-reporttypes:SonarQube"
           dotnet sonarscanner begin /v:1.${{ github.run_number }} /d:sonar.verbose=true /d:sonar.language=cs /o:"kamilbaczek" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$SONAR_TOKEN" /key:"kamilbaczek_Estimation-Tool" /d:sonar.coverageReportPaths=".\sonarqubecoverage\SonarQube.xml" /d:sonar.coverage.exclusions="**Tests*.cs"
           dotnet build
           dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"

